paths:
  /api/carts:
    post:
      tags:
        - Carts
      summary: Creates a cart
      description: Creation of a new cart
      operationId: createCart
      responses:
        "201":
          description: Created message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Cart successfully created
                  payload:
                    type: object
                    $ref: "#/components/schemas/CartServerResponse"
        "401":
          description: Unauthorized error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: UNAUTHORIZED
  /api/carts/{cid}:
    get:
      tags:
        - Carts
      summary: Gets a cart
      description: Get a cart by its ID
      operationId: getCart
      parameters:
        - name: cid
          in: path
          description: Cart ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success message and payload with the most important cart's information
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Cart found
                  payload:
                    type: object
                    $ref: "#/components/schemas/CartServerResponse"
        "401":
          description: Unauthorized error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: UNAUTHORIZED
        "404":
          description: Not found error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: CART_NOT_FOUND
    delete:
      tags:
        - Carts
      summary: Deletes a cart
      description: Delete a cart found by its ID
      operationId: deleteCart
      parameters:
        - name: cid
          in: path
          description: Cart ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Cart successfully deleted
        "401":
          description: Unauthorized error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: UNAUTHORIZED
        "404":
          description: Not found error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: CART_NOT_FOUND
  /api/carts/{cid}/products/{pid}:
    put:
      tags:
        - Carts
      summary: Updates item in cart
      description: Update an item in a cart found by its id
      operationId: updateItemInCart
      parameters:
        - name: cid
          in: path
          description: Cart ID
          required: true
          schema:
            type: string
        - name: pid
          in: path
          description: Product ID
          required: true
          schema:
            type: string
      requestBody:
        description:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: number
      responses:
        "200":
          description: Success message and payload with the most important cart's information
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Product was updated in cart
                  payload:
                    type: object
                    $ref: "#/components/schemas/CartServerResponse"
        "400":
          description: Bad request error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: PRODUCT_NOT_FOUND | CART_NOT_FOUND | CANNOT_ADD_ITS_OWN_PRODUCT | QUANTITY_IS_LOWER_THAN_ZERO | QUANTITY_IS_HIGHER_THAN_STOCK_AVAILABLE
        "401":
          description: Unauthorized error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: UNAUTHORIZED
        "404":
          description: Not found error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: CART_NOT_FOUND | PRODUCT_NOT_FOUND

  /api/carts/{cid}/purchase:
    get:
      tags:
        - Carts
      summary: Pruchase items in cart
      description: Purchase items in a cart, this should be found by its ID
      operationId: purchaseItemsInCart
      parameters:
        - name: cid
          in: path
          description: Cart ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success message and payload with the new cart information (it could return back some items that couldn't be successfully purchased)
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Products in cart were successfully purchased
                  payload:
                    type: object
                    example: {}
        "400":
          description: Bad request error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: PRODUCT_NOT_FOUND | CART_NOT_FOUND | CANNOT_ADD_ITS_OWN_PRODUCT | QUANTITY_IS_LOWER_THAN_ZERO | QUANTITY_IS_HIGHER_THAN_STOCK_AVAILABLE
        "401":
          description: Unauthorized error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: UNAUTHORIZED
        "404":
          description: Not found error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: CART_NOT_FOUND
components:
  schemas:
    CartServerResponse:
      type: object
      properties:
        id:
          type: string
        storage:
          type: array
